{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Leon\\\\Documents\\\\programming\\\\ecommerce-begin\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Leon\\\\Documents\\\\programming\\\\ecommerce-begin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this;\n\nimport ShopActionTypes from './shop-types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nexport var fetchCollectionsStart = function fetchCollectionsStart(collectionsMap) {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n  };\n};\nexport var fetchCollectionsSuccess = function fetchCollectionsSuccess(collectionsMap) {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n  };\n};\nexport var fetchCollectionsFailure = function fetchCollectionsFailure(errorMessage) {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n  };\n};\nexport var fetchCollectionsStartAsync = function fetchCollectionsStartAsync() {\n  return function (dispatch) {\n    var updateCollections = _this.props.updateCollections;\n    var collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(snapshot) {\n        var collectionsMap;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                collectionsMap = convertCollectionSnapshotToMap(snapshot);\n                dispatch(updateCollections(collectionsMap));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()).catch(function (error) {\n      return dispatch(fetchCollectionsFailure(error));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Leon/Documents/programming/ecommerce-begin/src/redux/shop/shop-actions.js"],"names":["ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsStart","collectionsMap","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","updateCollections","props","collectionRef","collection","get","then","snapshot","catch","error"],"mappings":";;;;;AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,+BAAxD;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,cAAD;AAAA,SAAqB;AACtDC,IAAAA,IAAI,EAAEL,eAAe,CAACM;AADgC,GAArB;AAAA,CAA9B;AAIP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAH,cAAc;AAAA,SAAK;AACtDC,IAAAA,IAAI,EAAEL,eAAe,CAACQ,yBADgC;AAEtDC,IAAAA,OAAO,EAAEL;AAF6C,GAAL;AAAA,CAA9C;AAKP,OAAO,IAAMM,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,YAAY;AAAA,SAAK;AACpDN,IAAAA,IAAI,EAAEL,eAAe,CAACY,yBAD8B;AAEpDH,IAAAA,OAAO,EAAEE;AAF2C,GAAL;AAAA,CAA5C;AAKP,OAAO,IAAME,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AAC5C,SAAO,UAAAC,QAAQ,EAAI;AAAA,QACRC,iBADQ,GACa,KAAI,CAACC,KADlB,CACRD,iBADQ;AAEf,QAAME,aAAa,GAAGhB,SAAS,CAACiB,UAAV,CAAqB,aAArB,CAAtB;AAEAJ,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAc,IAAAA,aAAa,CAACE,GAAd,GACCC,IADD;AAAA;AAAA;AAAA;AAAA;AAAA,+BACM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACIjB,gBAAAA,cADJ,GACqBF,8BAA8B,CAACmB,QAAD,CADnD;AAEFP,gBAAAA,QAAQ,CAACC,iBAAiB,CAACX,cAAD,CAAlB,CAAR;;AAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADN;;AAAA;AAAA;AAAA;AAAA,SAKCkB,KALD,CAKO,UAAAC,KAAK;AAAA,aAAIT,QAAQ,CAACJ,uBAAuB,CAACa,KAAD,CAAxB,CAAZ;AAAA,KALZ;AAMH,GAXD;AAaH,CAdM","sourcesContent":["import ShopActionTypes from './shop-types';\r\nimport {firestore, convertCollectionSnapshotToMap} from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = (collectionsMap) => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n})\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap\r\n})\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n})\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n    return dispatch => {\r\n        const {updateCollections} = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n        dispatch(fetchCollectionsStart());\r\n        collectionRef.get()\r\n        .then(async snapshot => {\r\n            const collectionsMap = convertCollectionSnapshotToMap(snapshot)\r\n            dispatch(updateCollections(collectionsMap));\r\n        })\r\n        .catch(error => dispatch(fetchCollectionsFailure(error)));\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}