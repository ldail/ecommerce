{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Leon\\\\Documents\\\\programming\\\\ecommerce-begin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\Leon\\\\Documents\\\\programming\\\\ecommerce-begin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Leon\\\\Documents\\\\programming\\\\ecommerce-begin\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Leon\\\\Documents\\\\programming\\\\ecommerce-begin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Leon\\\\Documents\\\\programming\\\\ecommerce-begin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Leon\\\\Documents\\\\programming\\\\ecommerce-begin\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport React, { useState } from 'react';\nimport { SignUpContainer } from './sign-up.styles';\nimport { connect } from 'react-redux';\nimport { signUpStart as _signUpStart } from '../../redux/user/user-actions';\n\nfunction SignUp(_ref) {\n  var signUpStart = _ref.signUpStart;\n\n  var _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userInfo = _useState2[0],\n      setUserInfo = _useState2[1];\n\n  var displayName = userInfo.displayName,\n      email = userInfo.email,\n      password = userInfo.password,\n      confirmPassword = userInfo.confirmPassword;\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n\n              if (!(password !== confirmPassword)) {\n                _context.next = 4;\n                break;\n              }\n\n              alert(\"Passwords don't match\");\n              return _context.abrupt(\"return\");\n\n            case 4:\n              try {\n                signUpStart(email, password, displayName);\n              } catch (error) {\n                console.error(error);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setUserInfo(_objectSpread({}, userInfo, _defineProperty({}, name, value)));\n  };\n\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Sign up\")));\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signUpStart: function signUpStart(email, password, displayName) {\n      return dispatch(_signUpStart({\n        email: email,\n        password: password,\n        displayName: displayName\n      }));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/Leon/Documents/programming/ecommerce-begin/src/components/sign-up/sign-up.component.jsx"],"names":["FormInput","CustomButton","React","useState","SignUpContainer","connect","signUpStart","SignUp","displayName","email","password","confirmPassword","userInfo","setUserInfo","handleSubmit","e","preventDefault","alert","error","console","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport React, { useState} from 'react';\r\nimport { SignUpContainer } from './sign-up.styles';\r\nimport { connect } from 'react-redux';\r\nimport {signUpStart} from '../../redux/user/user-actions'\r\n\r\nfunction SignUp({signUpStart}) {\r\n    const [userInfo, setUserInfo] = useState({displayName: '', email: '', password: '', confirmPassword: ''})\r\n\r\n    const {displayName, email, password, confirmPassword} = userInfo;\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        if (password !== confirmPassword) {\r\n            alert(`Passwords don't match`);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            signUpStart(email, password, displayName);\r\n        }\r\n        catch(error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target;\r\n        setUserInfo({...userInfo, [name]: value});\r\n    }\r\n\r\n    return (\r\n        <SignUpContainer>\r\n            <h2 className=\"title\">I do not have an account</h2>\r\n            <span>Sign up with your email and password</span>\r\n\r\n            <form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n                <FormInput type=\"text\" name=\"displayName\" value={displayName} onChange={handleChange} label=\"Display Name\" required />\r\n                <FormInput type=\"email\" name=\"email\" value={email} onChange={handleChange} label=\"Email\" required />\r\n                <FormInput type=\"password\" name=\"password\" value={password} onChange={handleChange} label=\"Password\" required />\r\n                <FormInput type=\"password\" name=\"confirmPassword\" value={confirmPassword} onChange={handleChange} label=\"Confirm Password\" required />\r\n\r\n                <CustomButton type=\"submit\">Sign up</CustomButton>\r\n            </form>\r\n        </SignUpContainer>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart: (email, password, displayName) => dispatch(signUpStart({email, password, displayName}))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}