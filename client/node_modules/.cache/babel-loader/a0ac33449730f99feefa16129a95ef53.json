{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Leon\\\\Documents\\\\programming\\\\ecommerce-begin\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Leon\\\\Documents\\\\programming\\\\ecommerce-begin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Leon\\\\Documents\\\\programming\\\\ecommerce-begin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Leon\\\\Documents\\\\programming\\\\ecommerce-begin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Leon\\\\Documents\\\\programming\\\\ecommerce-begin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Leon\\\\Documents\\\\programming\\\\ecommerce-begin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Leon\\\\Documents\\\\programming\\\\ecommerce-begin\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Leon\\\\Documents\\\\programming\\\\ecommerce-begin\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { updateCollections as _updateCollections } from '../../redux/shop/shop-actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nvar CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nvar CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nvar ShopPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ShopPage, _React$Component);\n\n  function ShopPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShopPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShopPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoading: true\n    };\n    _this.unsubscribeFromSnapshot = null;\n    return _this;\n  }\n\n  _createClass(ShopPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var updateCollections = this.props.updateCollections;\n      var collectionRef = firestore.collection('collections');\n      collectionRef.onSnapshot(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(snapshot) {\n          var collectionsMap;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  console.log(snapshot.docs);\n                  collectionsMap = convertCollectionSnapshotToMap(snapshot);\n                  _context.next = 4;\n                  return updateCollections(collectionsMap);\n\n                case 4:\n                  _this2.setState({\n                    isLoading: false\n                  });\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var match = this.props.match;\n      var isLoading = this.state.isLoading;\n      return React.createElement(\"div\", {\n        className: \"ShopPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"\".concat(match.path),\n        render: function render(props) {\n          return React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n            isLoading: isLoading\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"\".concat(match.path, \"/:categoryId\"),\n        render: function render(props) {\n          return React.createElement(CollectionPageWithSpinner, Object.assign({\n            isLoading: isLoading\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ShopPage;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateCollections: function updateCollections(collectionsMap) {\n      return dispatch(_updateCollections(collectionsMap));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/Leon/Documents/programming/ecommerce-begin/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","CollectionPage","firestore","convertCollectionSnapshotToMap","connect","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","state","isLoading","unsubscribeFromSnapshot","props","collectionRef","collection","onSnapshot","snapshot","console","log","docs","collectionsMap","setState","match","path","Component","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,+BAAxD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAiB,IAAjBA,kBAAR,QAAgC,+BAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,IAAMC,8BAA8B,GAAGD,WAAW,CAACP,mBAAD,CAAlD;AACA,IAAMS,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;;IAEMQ,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE;AADP,K;UAGRC,uB,GAA0B,I;;;;;;wCAEN;AAAA;;AAAA,UACTP,iBADS,GACY,KAAKQ,KADjB,CACTR,iBADS;AAEhB,UAAMS,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AACAD,MAAAA,aAAa,CAACE,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAyB,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACMC,kBAAAA,cAFe,GAEElB,8BAA8B,CAACc,QAAD,CAFhC;AAAA;AAAA,yBAGfZ,iBAAiB,CAACgB,cAAD,CAHF;;AAAA;AAIrB,kBAAA,MAAI,CAACC,QAAL,CAAc;AAACX,oBAAAA,SAAS,EAAE;AAAZ,mBAAd;;AAJqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAzB;;AAAA;AAAA;AAAA;AAAA;AAMH;;;6BAEQ;AAAA,UACFY,KADE,GACO,KAAKV,KADZ,CACFU,KADE;AAAA,UAEFZ,SAFE,GAEW,KAAKD,KAFhB,CAEFC,SAFE;AAIT,aACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,YAAKY,KAAK,CAACC,IAAX,CAAjB;AAAoC,QAAA,MAAM,EAAE,gBAACX,KAAD;AAAA,iBAAW,oBAAC,8BAAD;AAAgC,YAAA,SAAS,EAAEF;AAA3C,aAA0DE,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAX;AAAA,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,YAAKU,KAAK,CAACC,IAAX,iBAAX;AAA0C,QAAA,MAAM,EAAE,gBAACX,KAAD;AAAA,iBAAW,oBAAC,yBAAD;AAA2B,YAAA,SAAS,EAAEF;AAAtC,aAAqDE,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAX;AAAA,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAOC;;;;EA5BkBf,KAAK,CAAC2B,S;;AA+B7B,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpCtB,IAAAA,iBAAiB,EAAE,2BAAAgB,cAAc;AAAA,aAAIM,QAAQ,CAACtB,kBAAiB,CAACgB,cAAD,CAAlB,CAAZ;AAAA;AADG,GAAL;AAAA,CAAnC;;AAIA,eAAejB,OAAO,CAAC,IAAD,EAAMsB,kBAAN,CAAP,CAAiCjB,QAAjC,CAAf","sourcesContent":["import React from 'react';\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\r\nimport { Route } from 'react-router-dom';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport {firestore, convertCollectionSnapshotToMap} from '../../firebase/firebase.utils';\r\nimport {connect} from 'react-redux';\r\nimport {updateCollections} from '../../redux/shop/shop-actions'\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n    state = {\r\n        isLoading: true\r\n    }\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount() {\r\n        const {updateCollections} = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            console.log(snapshot.docs)\r\n            const collectionsMap = convertCollectionSnapshotToMap(snapshot)\r\n            await updateCollections(collectionsMap);\r\n            this.setState({isLoading: false});\r\n        })\r\n    }\r\n\r\n    render() {\r\n    const {match} = this.props;\r\n    const {isLoading} = this.state;\r\n    \r\n    return (\r\n        <div className=\"ShopPage\">\r\n            <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={isLoading} {...props} />} />\r\n            <Route path={`${match.path}/:categoryId`} render={(props) => <CollectionPageWithSpinner isLoading={isLoading} {...props} />} />\r\n\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\nexport default connect(null,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}